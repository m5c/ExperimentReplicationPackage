,1 - Easier,2 - More Confident Correct Interface,3 - Own Project Preference for legacy refactor,4 - Problems Perceived,5 - Major time loss perceived,6 - Understood Tasks,7 - More Intuitive Methodology,8 - More Confident Unit Tests,9 - Preference for future personal projects,10 - Free text
Fox,1/XOX/TC,2/BS/IDE,TC,TC crashes. Zoom. Pom files.,Pom files. Video tutorials.,Yes,TC,2/BS/IDE,IDE,Slow video upload. TC not stable and too many lines. Would use if a plugin.
Koala,1/XOX/TC,1/XOX/TC,TC,TC crashes. Hard to maintain overview in IDE files.,Understanding TC UI.,Yes,TC,1/XOX/TC,TC,Prefers TC because no need to navigate project files for refactor.
Raccoon,1/XOX/TC,2/BS/IDE,IDE,NPE during manual refactor. Problems with annotations.,None,Yes,IDE,2/BS/IDE,IDE,States confidence into own code and scepticism into modelling tool because no visible code in process. Annoyed by TC install requirements.
Squid,Undecided,1/XOX/TC,IDE,Found IF description ambiguous. Had problems with local maven repo.,IF description read.,Yes,TC,2/BS/IDE,None,State they do not trust the tool. Raises doubts the modelling tool is suitable for larger projects.
Turtle,1/XOX/TC,1/XOX/TC,TC,None,Note: reply is “task 2“ ,No,TC,1/XOX/TC,TC,None
Unicorn,1/XOX/TC,1/XOX/TC,TC,Experienced problems with springs autowiring.,Debugging spring auto wiring.,Yes,TC,1/XOX/TC,TC,Raises doubts that TC can handle larger use cases.
Zebra,1/XOX/TC,2/BS/IDE,TC,TC UI.,None,Yes,TC,2/BS/IDE,TC,States preference to TC once understood UI. Found boilerplate code in manual approach tedious and therefore preferred TC. Does not trust code generator.
Fox,2/XOX/TC,2/XOX/TC,IDE,TC crashes.,Unsuccessful search for issue in manual implementation.,Yes,IDE,2/XOX/TC,IDE,Finds TC touch-adaption of UI unintuitive on standard computer.
Koala,2/XOX/TC,2/XOX/TC,TC,TC crashes on generation. Had to repeat task. Unable to save recording and did task again.,Video instructions. Would have preferred interface description that provides part of manual solution (full resource path as string),Yes,TC,None,IDE,Appreciates visual overview of mapping in TC. Prefers IDE for own projects since assumed easier to debug.
Raccoon,2/XOX/TC,2/XOX/TC,TC,None,None,Yes,TC,2/XOX/TC,TC,Participant felt slow because not used to OS (computer provided for study).
Squid,2/XOX/TC,2/XOX/TC,IDE,Confused top level resource with modelled class. Was not able to finish manual task.,Understanding semantics of REST and resources.,Yes,TC,2/XOX/TC,None,None
Turtle,2/XOX/TC,1/BS/IDE,IDE,Struggled with autowiring. Had NPEs in manual task.,Manual task felt slow.,Yes,IDE,1/BS/IDE,IDE,Prefers IDE. Feels more in control when working with code.
Unicorn,2/XOX/TC,2/XOX/TC,TC,Struggled with autowiring. Not able to run generated code.,TouchCORE: buggy and slow. Losing work repeatedly on TouchCORE crashes.,Yes,None,2/XOX/TC,IDE,Prefers IDE because feels more in control and TouchCORE to unreliable.
Zebra,2/XOX/TC,2/XOX/TC,TC,Manual approach: need for RestController annotation. Was at first confused about difference of models and classes on file system.,None,Yes,TC,1/BS/IDE,IDE,"Trusts more into IDE because it is clearer what is going on. Response for 9 is double negated, so we assume that they prefer the IDE since they are dealing with a REST api."
Fox,1/BS/TC,2/XOX/IDE,IDE,TouchCORE crashed twice. Experienced mapping as complicated. found TouchCORE UI hard to use.,Connecting resources in TouchCORE.,Yes,TC,2/XOX/IDE,None,"Noted task understanding as “mostly"". We interpret this as positive. Does not want to use TouchCORE due to UI perceived as not friendly enough."
Koala,1/BS/TC,1/BS/TC,TC,None,Found videos tedious.,Yes,TC,1/BS/TC,IDE,Prefers IDE because feels like more control. Notes that willing to use model approach if implementation easier to work with.
Raccoon,1/BS/TC,1/BS/TC,TC,Found it complicated to figure out annotations. ,Figuring out annotations for manual task.,Yes,TC,2/XOX/IDE,TC,Prefers TC because intuitive easy to understand and less time consuming.
Squid,1/BS/TC,1/BS/TC,TC,Confusion in manual task resulting on incorrectly modelled resources.,Manual task solving,Yes,TC,1/BS/TC,TC,Appreciated resource visualization in TouchCORE approach.
Turtle,1/BS/TC,1/BS/TC,TC,Autowiring,Understanding game endpoint resources of manual task 2.,Yes,TC,1/BS/TC,IDE,Prefers IDE because drawbacks of TouchCORE stability issues.
Unicorn,1/BS/TC,1/BS/TC,IDE,None,None,Yes,TC,1/BS/TC,None,More assurance in the first one because I could visually see the children and parent resources with ease. Doubts scaling of TouchCORE if multiple controllers. Appreciates focus on semantic task with absence of boilerplate actions in TouchCORE task. States preference depends on project size.
Zebra,1/BS/TC,1/BS/TC,IDE,Building the application with TouchCore and Maven was confusing. Unsure which folder to access. TouchCORE crashed.,Overlapping UI elements made it hard to pursue task in TouchCORE. Likewise hard to find function overview in InterlliJ,Yes,TC,1/BS/TC,IDE,I would probably trust the manual approach more as it is easier to verify that each individual mapping is correct. I would trust the manual approach of IntelliJ more to ensure that the mappings are explicit and none are missed
Fox,1/XOX/IDE,1/XOX/IDE,IDE,None other than previously mention issues with TouchCORE UI.,Verifying mappings in MDE test and watching instruction videos.,Yes,TC,1/XOX/IDE,IDE,Names hard to use TouchCORE UI as main reason not to use it in future. States no trust in generated code. Mentions uncertainty with return types for REST endpoints.
Koala,2/BS/TC,1/XOX/IDE,TC,Multiple TouchCORE crashes.,Elaborating the pom xml for manual approach.,Yes,TC,2/BS/TC,None,States many mapping done with TouchCORE reduce confidence that correct. Yet finds TouchCORE more intuitive due to representation of interface as tree structure. States preference for TC conditional to improvements.
Raccoon,2/BS/TC,1/XOX/IDE,IDE,Keeping track all the mappings in manual approach.,Boilerplate refactoring in manual approach. Pom and singleton adjustments.,Yes,TC,1/XOX/IDE,IDE,Felt like more in understanding for manual task. 
Squid,2/BS/TC,2/BS/TC,TC,None,Manual compared to TouchCORE task.,Yes,TC,2/BS/TC,IDE,Raises doubt DSL approach would scale for larger projects and thus lose traceability.
Turtle,2/BS/TC,2/BS/TC,TC,Using TouchCORE. States problems using UI in split view.,Familiarization with material and verifying correctness.,Yes,TC,1/XOX/IDE,IDE,States the TouchCORE UI makes it harder than it has to be. Although likes the fact that full interface visible at once in TouchCORE task. Raises doubt the code generation happened correctly. Favours control of IDE approach. Not willing to use TC in future projects due to UI.
Unicorn,2/BS/TC,2/BS/TC,TC,TouchCORE crashed. Loss of work. Unable to undo mapping deletions with UI.,None,Yes,TC,1/XOX/IDE,IDE,Not confident line mappings were correct and complete. Unsure if TouchCORE solution scales.
Zebra,2/BS/TC,1/XOX/IDE,IDE,None,Preliminary tasks and understanding zoo video instructions.,Yes,TC,2/BS/TC,IDE,Only willing to use TC for own projects conditional if bug fixes first. We interpret that as in current state IDE is preferred solution. States that IDE preferred because feels more natural. Doubts usefulness of code generation. 